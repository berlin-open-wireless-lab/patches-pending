--- a/source/package/network/services/hostapd/src/src/ap/ubus.c
+++ b/source/package/network/services/hostapd/src/src/ap/ubus.c
@@ -526,6 +526,10 @@ int hostapd_ubus_handle_event(struct hos
 	if (req->frame_info)
 		blobmsg_add_u32(&b, "signal", req->frame_info->ssi_signal);
 	blobmsg_add_u32(&b, "freq", hapd->iface->freq);
+	if (req->elems) {
+		blobmsg_add_u8(&b, "ht_support", req->elems->ht_capabilities != 0);
+		blobmsg_add_u8(&b, "vht_support", req->elems->vht_capabilities != 0);
+	}
 
 	if (ubus_notify_async(ctx, &hapd->ubus.obj, type, b.head, &ureq.nreq))
 		return 0;
--- a/source/package/network/services/hostapd/src/src/ap/ubus.h
+++ b/source/package/network/services/hostapd/src/src/ap/ubus.h
@@ -18,6 +18,7 @@ enum hostapd_ubus_event_type {
 struct hostapd_ubus_request {
 	enum hostapd_ubus_event_type type;
 	const struct ieee80211_mgmt *mgmt_frame;
+	const struct ieee802_11_elems *elems;
 	const struct hostapd_frame_info *frame_info;
 	const u8 *addr;
 };

