--- a/source/package/network/services/hostapd/src/src/ap/ubus.c
+++ b/source/package/network/services/hostapd/src/src/ap/ubus.c
@@ -703,6 +703,8 @@ int hostapd_ubus_handle_event(struct hos
 	const char *type = "mgmt";
 	struct ubus_event_req ureq = {};
 	const u8 *addr;
+	void *supp_rates, *ext_supp_rates;
+	int i;
 
 	if (req->mgmt_frame)
 		addr = req->mgmt_frame->sa;
@@ -727,6 +729,25 @@ int hostapd_ubus_handle_event(struct hos
 	if (req->frame_info)
 		blobmsg_add_u32(&b, "signal", req->frame_info->ssi_signal);
 	blobmsg_add_u32(&b, "freq", hapd->iface->freq);
+	if (req->elems) {
+		blobmsg_add_u8(&b, "ht_support", req->elems->ht_capabilities != 0);
+		blobmsg_add_u8(&b, "vht_support", req->elems->vht_capabilities != 0);
+		if (req->elems->supp_rates) {
+			supp_rates = blobmsg_open_array(&b, "supp_rates");
+			for (i = 0; req->elems->supp_rates && i < req->elems->supp_rates_len; i++) {
+				blobmsg_add_u32(&b, NULL, req->elems->supp_rates[i]);
+			}
+			blobmsg_close_array(&b, supp_rates);
+		}
+
+		if (req->elems->ext_supp_rates) {
+			ext_supp_rates = blobmsg_open_array(&b, "ext_supp_rates");
+			for (i = 0; req->elems->ext_supp_rates && i < req->elems->ext_supp_rates_len; i++) {
+				blobmsg_add_u32(&b, NULL, req->elems->ext_supp_rates[i]);
+			}
+			blobmsg_close_array(&b, ext_supp_rates);
+		}
+	}
 
 	if (!hapd->ubus.notify_response) {
 		ubus_notify(ctx, &hapd->ubus.obj, type, b.head, -1);
--- a/source/package/network/services/hostapd/src/src/ap/ubus.h
+++ b/source/package/network/services/hostapd/src/src/ap/ubus.h
@@ -18,6 +18,7 @@ enum hostapd_ubus_event_type {
 struct hostapd_ubus_request {
 	enum hostapd_ubus_event_type type;
 	const struct ieee80211_mgmt *mgmt_frame;
+	const struct ieee802_11_elems *elems;
 	const struct hostapd_frame_info *frame_info;
 	const u8 *addr;
 };
