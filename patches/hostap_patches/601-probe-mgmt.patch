--- a/src/ap/ubus.c
+++ b/src/ap/ubus.c
@@ -522,6 +522,8 @@ int hostapd_ubus_handle_event(struct hos
 	if (req->frame_info)
 		blobmsg_add_u32(&b, "signal", req->frame_info->ssi_signal);
 	blobmsg_add_u32(&b, "freq", hapd->iface->freq);
+	blobmsg_add_u8(&b, "ht_support", req->mgmt_frame->u.beacon.ht_capab.ht_capabilities_info != 0);
+	blobmsg_add_u8(&b, "vht_support", req->mgmt_frame->u.beacon.vht_capab.vht_capabilities_info != 0);
 
 	if (ubus_notify_async(ctx, &hapd->ubus.obj, type, b.head, &ureq.nreq))
 		return 0;
--- a/src/common/ieee802_11_defs.h
+++ b/src/common/ieee802_11_defs.h
@@ -768,6 +768,45 @@ struct ieee80211_hdr {
 
 #define IEEE80211_FC(type, stype) host_to_le16((type << 2) | (stype << 4))
 
+/* HT Capabilities element */
+struct ieee80211_ht_capabilities {
+	le16 ht_capabilities_info;
+	u8 a_mpdu_params; /* Maximum A-MPDU Length Exponent B0..B1
+			   * Minimum MPDU Start Spacing B2..B4
+			   * Reserved B5..B7 */
+	u8 supported_mcs_set[16];
+	le16 ht_extended_capabilities;
+	le32 tx_bf_capability_info;
+	u8 asel_capabilities;
+} STRUCT_PACKED;
+
+/* HT Operation element */
+struct ieee80211_ht_operation {
+	u8 primary_chan;
+	/* Five octets of HT Operation Information */
+	u8 ht_param; /* B0..B7 */
+	le16 operation_mode; /* B8..B23 */
+	le16 param; /* B24..B39 */
+	u8 basic_mcs_set[16];
+} STRUCT_PACKED;
+
+struct ieee80211_vht_capabilities {
+	le32 vht_capabilities_info;
+	struct {
+		le16 rx_map;
+		le16 rx_highest;
+		le16 tx_map;
+		le16 tx_highest;
+	} vht_supported_mcs_set;
+} STRUCT_PACKED;
+
+struct ieee80211_vht_operation {
+	u8 vht_op_info_chwidth;
+	u8 vht_op_info_chan_center_freq_seg0_idx;
+	u8 vht_op_info_chan_center_freq_seg1_idx;
+	le16 vht_basic_mcs_set;
+} STRUCT_PACKED;
+
 struct ieee80211_mgmt {
 	le16 frame_control;
 	le16 duration;
@@ -815,6 +854,8 @@ struct ieee80211_mgmt {
 			u8 timestamp[8];
 			le16 beacon_int;
 			le16 capab_info;
+			struct ieee80211_ht_capabilities ht_capab;
+			struct ieee80211_vht_capabilities vht_capab;
 			/* followed by some of SSID, Supported rates,
 			 * FH Params, DS Params, CF Params, IBSS Params, TIM */
 			u8 variable[];
@@ -941,30 +982,6 @@ struct ieee80211_mgmt {
 /* Rx MCS bitmask is in the first 77 bits of supported_mcs_set */
 #define IEEE80211_HT_MCS_MASK_LEN 10
 
-/* HT Capabilities element */
-struct ieee80211_ht_capabilities {
-	le16 ht_capabilities_info;
-	u8 a_mpdu_params; /* Maximum A-MPDU Length Exponent B0..B1
-			   * Minimum MPDU Start Spacing B2..B4
-			   * Reserved B5..B7 */
-	u8 supported_mcs_set[16];
-	le16 ht_extended_capabilities;
-	le32 tx_bf_capability_info;
-	u8 asel_capabilities;
-} STRUCT_PACKED;
-
-
-/* HT Operation element */
-struct ieee80211_ht_operation {
-	u8 primary_chan;
-	/* Five octets of HT Operation Information */
-	u8 ht_param; /* B0..B7 */
-	le16 operation_mode; /* B8..B23 */
-	le16 param; /* B24..B39 */
-	u8 basic_mcs_set[16];
-} STRUCT_PACKED;
-
-
 struct ieee80211_obss_scan_parameters {
 	le16 scan_passive_dwell;
 	le16 scan_active_dwell;
@@ -975,24 +992,6 @@ struct ieee80211_obss_scan_parameters {
 	le16 scan_activity_threshold;
 } STRUCT_PACKED;
 
-
-struct ieee80211_vht_capabilities {
-	le32 vht_capabilities_info;
-	struct {
-		le16 rx_map;
-		le16 rx_highest;
-		le16 tx_map;
-		le16 tx_highest;
-	} vht_supported_mcs_set;
-} STRUCT_PACKED;
-
-struct ieee80211_vht_operation {
-	u8 vht_op_info_chwidth;
-	u8 vht_op_info_chan_center_freq_seg0_idx;
-	u8 vht_op_info_chan_center_freq_seg1_idx;
-	le16 vht_basic_mcs_set;
-} STRUCT_PACKED;
-
 struct ieee80211_ampe_ie {
 	u8 selected_pairwise_suite[4];
 	u8 local_nonce[32];
